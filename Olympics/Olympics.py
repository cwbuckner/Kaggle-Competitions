# -*- coding: utf-8 -*-
"""10/4 Homework.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vieqkjhYGiiK3mhFKOEEmrtuz-qKkmy2

Classification
  yes or no
  classifying into categories
Regresion
  Answer is not categorical value
  More numbers based
"""

import pandas as pd
df = pd.read_csv('/content/drive/MyDrive/12th Grade/Machine Learning/Data/train.csv')

df #classification problem

df.isna().sum()

X = df[['Parch', 'Fare']]
X

y = df['Survived']
y

X.shape

y.shape

from sklearn.linear_model import LogisticRegression

logreg = LogisticRegression(solver='liblinear', random_state=1) #instatiating

from sklearn.model_selection import cross_val_score
cross_val_score(logreg, X, y, cv=3, scoring = 'accuracy').mean()

logreg.fit(X,y)

df_new = pd.read_csv('http://bit.ly/kaggletest')
df_new

X_new = df[['Parch', 'Fare']]
X_new

logreg.predict(X_new)

from sklearn.preprocessing import OneHotEncoder
ohe = OneHotEncoder()
ohe.fit_transform(df[['Embarked']])

ohe = OneHotEncoder(sparse=False)
ohe.fit_transform(df[['Embarked']])

ohe.categories_

ohe.fit_transform(df[['Embarked', 'Sex']])

ohe.categories_

cols = ['Parch','Fare','Embarked','Sex']

X = df[cols]
X

from sklearn.compose import make_column_transformer
ct = make_column_transformer(
    (ohe, ['Embarked','Sex']),
    remainder='passthrough')

ct.fit_transform(X)

from sklearn.pipeline import make_pipeline
pipe = make_pipeline(ct, logreg)

pipe.fit(X,y)

logreg.fit(ct.fit_transform(X),y)

X_new = df_new[cols]
X_new

X_new = X_new.dropna()
pipe.predict(X_new)

"""RECAP"""

import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.compose import make_column_transformer
from sklearn.pipeline import make_pipeline

cols=['Parch', 'Fare', 'Embarked', 'Sex']

df = pd.read_csv('/content/drive/MyDrive/12th Grade/Machine Learning/Data/train.csv')
X = df[cols]
y= df['Survived']

df_new = pd.read_csv('/content/drive/MyDrive/12th Grade/Machine Learning/Data/test.csv')
X_new = df_new[cols]

ohe = OneHotEncoder()

ct = make_column_transformer(
    (ohe, ['Embarked', 'Sex']),
    remainder ='passthrough')

loegreg = LogisticRegression(solver='liblinear', random_state=1)

pipe = make_pipeline(ct, logreg)
X_new = X_new.dropna()
pipe.fit(X,y)
pipe.predict(X_new)